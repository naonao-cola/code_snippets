"""
邢不行™️选币框架
Python数字货币量化投资课程

版权所有 ©️ 邢不行
微信: xbx8662

未经授权，不得复制、修改、或使用本代码的全部或部分内容。仅限个人学习用途，禁止商业用途。

Author: 邢不行
"""
import warnings

import pandas as pd

# 导入回测结果路径、配置模型、日志记录器
from core.model.backtest_config import load_config
# 导入数据准备、因子计算、选币模块、回测模块的主要函数
from program.step1_prepare_data import prepare_data
from program.step2_calculate_factors import calc_factors
from program.step3_select_coins import select_coins, transfer_swap, aggregate_select_results
from program.step4_simulate_performance import simulate_performance

# ====================================================================================================
# ** 脚本运行前配置 **
# 设定一些配置，并处理初始问题，确保回测主程序正常运行
# ====================================================================================================
warnings.filterwarnings('ignore')  # 忽略不必要的警告，保持输出界面简洁

# 设置 pandas 的显示选项，使较大数据框在控制台中更易阅读
pd.set_option('expand_frame_repr', False)  # 避免列太多时换行
pd.set_option('display.unicode.ambiguous_as_wide', True)  # 改善命令行输出时的列对齐
pd.set_option('display.unicode.east_asian_width', True)

if __name__ == '__main__':
    """
    ** 回测主程序 **
    脚本主要流程包括以下步骤：
    0. 初始准备
    1. 准备回测所需数据。
    2. 计算选币因子（指标）。
    3. 根据因子结果选币。
    4. 基于选币结果模拟投资组合表现。
    """

    # ====================================================================================================
    # 0. 初始准备
    # ====================================================================================================
    # 如果回测结果目录不存在，则创建该目录

    print('🌀 回测系统启动中，稍等...')

    # 从配置文件中读取并初始化回测配置
    conf = load_config()

    # ====================================================================================================
    # 1. 数据准备
    # ====================================================================================================
    # 调用数据准备函数，加载并预处理回测所需的数据，函数位于 step1_prepare_data.py
    prepare_data(conf)

    # ====================================================================================================
    # 2. 因子计算
    # ====================================================================================================
    # 根据配置文件计算策略因子和过滤因子，函数位于 step2_calculate_factors.py
    calc_factors(conf)

    # ====================================================================================================
    # 3. 选币
    # ====================================================================================================
    # 使用计算得到的因子来选币，函数位于 step3_select_coins.py
    select_coins(conf)  # 选币
    if is_short := conf.strategy_short is not None:
        select_coins(conf, is_short=True)  # 选币

    # 聚合选币结果
    select_results = aggregate_select_results(conf)

    # ====================================================================================================
    # 4. 基于选币结果模拟资金曲线
    # ====================================================================================================
    # 根据选出的币种模拟投资组合的表现，计算资金曲线，即投资组合的收益变化情况，函数位于 step4_simulate_performance.py
    simulate_performance(conf, select_results)
